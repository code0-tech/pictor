@use "../../styles/helpers";
@use "../../styles/variables";
@use "../../styles/box";
@use "sass:math";

.input {

  $padding: variables.$xs;
  display: flex;
  z-index: 1;
  align-items: stretch;
  box-sizing: border-box;

  & {
    @include box.box(variables.$secondary, variables.$white, variables.$white);
    @include box.boxHover(variables.$primary, variables.$white, variables.$white);
    @include box.boxActive(variables.$primary, variables.$white, variables.$white);
    @include helpers.fontStyle();
    @include helpers.borderRadius();
  }

  &:has(&__control:focus) {
    @include box.boxActiveStyle(variables.$primary, variables.$white, variables.$white);
  }

  &__left, &__right {
    display: flex;
    align-items: stretch;
    margin: $padding / 4;
    gap: $padding;

    > button {
      height: 100%;
      padding-left: 0;
      padding-right: 0;
    }

    &--action {
      padding: 0;
    }

    &--placeholder {
      @include box.box(variables.$primary);
      @include helpers.fontStyle();
      border-radius: variables.$borderRadius - ($padding / 4);
      padding: $padding;
    }

  }

  &__left {
    padding-left: $padding;

    &--icon {
      align-items: center;
    }
  }

  &__right {
    padding-right: $padding;

    &--icon {
      align-items: center;
    }
  }

  &__control {
    background: none;
    border: none;
    outline: none;
    padding: $padding $padding;
    flex: 1;
    width: 100%;
    box-shadow: none;
    font-size: variables.$sm;
    color: rgba(variables.$white, .5);

    & {
      @include helpers.fontStyle();
    }
  }


  &__label {
    text-transform: uppercase;
    color: rgba(variables.$white, .5);
    font-size: variables.$xs;
    //margin: $padding 0;
    display: block;

    & {
      @include helpers.fontStyle();
    }
  }

  &__description {
    color: rgba(variables.$white, .5);
    font-size: variables.$sm;
    margin: calc($padding / 2) 0 $padding;
    display: block;

    & {
      @include helpers.fontStyle();
    }
  }

  &__message {
    padding: $padding;
    z-index: 0;
    display: flex;
    align-items: center;
    font-size: variables.$xs;
    gap: $padding / 2;
    margin-top: $padding;

    & {
      @include box.box(variables.$error, variables.$white, variables.$error);
      @include helpers.borderRadius();
      @include helpers.fontStyle();
    }

    > svg {
      width: variables.$sm;
      height: variables.$sm;
    }
  }

}

.pin-input {
  display: flex;
  justify-content: space-between;
  gap: variables.$xs;
  position: relative;
  background: transparent;

  &__field {
    flex: 1;
    width: 100%;
    aspect-ratio: 1/1;
    text-align: center;
  }
}

.number-input {
  &::-webkit-outer-spin-button, &::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }

  &[type=number] {
    -moz-appearance: textfield;
  }
}

.radio-group {

}

.radio-input {
  background: transparent !important;
  box-shadow: none !important;
  display: flex;
  align-items: center;
  box-sizing: border-box;
  gap: variables.$xxs;
  position: relative;

  &__button {
    top: -1px;
    width: 18px;
    height: 18px;
    padding: variables.$xxs;

    & {
      @include helpers.fontStyle();
      @include box.boxActive();
      @include box.box();
      @include helpers.disabled();
      @include helpers.borderRadius();
    }

    &[data-state="checked"] {
      @include box.boxActiveStyle();
    }

  }

  &__indicator {
    height: 100%;
    position: relative;
    display: block;
    aspect-ratio: 1/1;

    &[data-state="checked"] {
      background-color: variables.$info;

      & {
        @include helpers.borderRadius();
      }
    }

  }

}

.radio-button {
  padding: 0;
  display: inline-flex;
}

.checkbox-input {

  $padding: variables.$xxs;
  $size: 0.9rem;

  background: transparent !important;
  box-shadow: none !important;
  align-items: center;
  box-sizing: border-box;
  gap: variables.$xxs;
  padding: $padding 0;

  &__button {

    aspect-ratio: 1/1;
    width: 17px;
    height: 17px;
    display: flex;
    align-items: center;
    justify-content: center;

    & {
      @include helpers.fontStyle();
      @include box.boxActive();
      @include box.box();
      @include helpers.disabled();
      @include helpers.borderRadius();
    }

  }

  &__indicator {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    top: 1px;
  }
}

.switch-input {

  $padding: variables.$xxs;
  $size: 0.9rem;
  background: transparent !important;
  display: inline-flex;
  align-items: center;
  padding: 0;
  border: none !important;

  .input__control {

    position: relative;
    box-sizing: border-box;
    padding: 0;
    width: $size;
    height: $size;

    appearance: none;
    outline: none;

    background-color: transparent;
    border-radius: 50%;

    &:checked {

      &:after {
        -webkit-transform: translateX(22.5px);
        -ms-transform: translateX(22.5px);
        transform: translateX(22.5px);
        -webkit-transition: .4s;
        transition: .4s;
      }

      &:before {
        background-color: helpers.backgroundColor(variables.$info);
        -webkit-transition: .4s;
        transition: .4s;
      }
    }

    &:after {
      width: $size;
      height: $size;
      background-color: variables.$white;
      border-radius: 50%;
      position: absolute;
      content: "";
      -webkit-transition: .4s;
      transition: .4s;
    }

    &:before {
      background: helpers.backgroundColor(variables.$primary);
      position: absolute;
      border-radius: 50rem;
      width: $size * 2.5 + $padding;
      height: $size + $padding;
      top: calc(-1 * $padding / 2);
      left: calc(-1 * $padding / 2);
      content: "";
      z-index: -1;
      -webkit-transition: .4s;
      transition: .4s;
    }


  }

}