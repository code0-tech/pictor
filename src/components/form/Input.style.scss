@use "../../styles/helpers";
@use "../../styles/variables";
@use "../../styles/box";
@use "sass:math";

.input {

  $padding: variables.$xs;
  @include box.box(variables.$primary);

  & {
    display: flex;
    z-index: 1;
    align-items: stretch;
    cursor: pointer;
  }

  &:has(&__control:focus) {
    border: 1px solid helpers.borderColor(variables.$primary);
  }

  &--not-valid {
    border: 1px solid helpers.borderColor(variables.$error);
  }

  &__left, &__right {
    display: flex;
    align-items: stretch;

    &--action {
      padding: 0;
    }

    &--placeholder {
      @include box.box(variables.$secondary);
      padding: $padding;
    }

  }

  &__left {
    &--icon {
      align-items: center;
      padding: $padding 0 $padding $padding;
    }
  }

  &__right {
    &--icon {
      align-items: center;
      padding: $padding $padding $padding 0;
    }
  }

  &__control {
    background: none;
    border: none;
    outline: none;
    padding: $padding $padding;
    flex: 1;
    box-shadow: none;
    font-size: variables.$sm;
    color: rgba(variables.$white, .5);
  }


  &__label {
    text-transform: uppercase;
    color: rgba(variables.$white, .5);
    font-size: variables.$xs;
    //margin: $padding 0;
    display: block;
  }

  &__description {
    color: rgba(variables.$white, .5);
    font-size: variables.$sm;
    margin: calc($padding / 2) 0 $padding;
    display: block;
  }

  &__message {
    @include box.box(variables.$error);
    border-top-right-radius: 0;
    border-top-left-radius: 0;
    padding: $padding * 2 $padding $padding;
    top: -$padding;
    z-index: 0;
    display: flex;
    align-items: center;
    font-size: variables.$xs;
    gap: $padding;

    > svg {
      width: variables.$xs;
      height: variables.$xs;
    }
  }

}

.radio-input, .radio-button {

  $padding: variables.$xxs;
  $size: 0.9rem;

  background:transparent !important;
  border-radius: 0 !important;
  border: none !important;
  align-items: center;
  box-sizing: border-box;
  padding: $padding 0;
  gap: variables.$xxs;

  .input__control {

    position: relative;
    flex: none;
    box-sizing: border-box;
    padding: 0;
    margin: 1px 0;
    width: $size;
    height: $size;
    aspect-ratio: 1/1;

    appearance: none;
    outline: none;

    background-color: transparent;
    border: 1px solid helpers.borderColor(variables.$secondary);
    border-radius: 50%;

    &:checked {
      border-color: helpers.borderColor(variables.$info);

      &:before {
        content: "";
        position: absolute;
        left: 50%;
        aspect-ratio: 1/1;
        border-radius: 50%;
        top: 50%;
        transform: translateX(-50%) translateY(-50%);
        width: calc($size/2);
        height: calc($size/2);
        background: helpers.backgroundColor(variables.$info);
      }
    }

  }
}

.radio-button {
  padding: 0;
  display: inline-flex;
}

.checkbox-input {

  $padding: variables.$xxs;
  $size: 0.9rem;

  background: helpers.backgroundColor(variables.$secondary) !important;
  border-radius: 0 !important;
  border: none !important;
  align-items: center;
  box-sizing: border-box;
  gap: variables.$xxs;
  padding: $padding 0;

  .input__control {

    position: relative;
    flex: none;
    box-sizing: border-box;
    padding: 0;
    margin: 1px 0;
    width: $size;
    height: $size;

    appearance: none;
    outline: none;

    background-color: transparent;
    border: 1px solid helpers.borderColor(variables.$secondary);
    border-radius: math.div(variables.$borderRadius, 3);

    &:checked {
      border-color: helpers.borderColor(variables.$info);
      background: helpers.backgroundColor(variables.$info);

      &:before {
        content: "";
        position: absolute;
        left: 50%;
        top: 50%;
        transform: translateX(-50%) translateY(-50%);
        width: calc($size/2);
        height: calc($size/2);
        clip-path: polygon(14% 44%, 0 65%, 50% 100%, 100% 16%, 80% 0%, 43% 62%);
        background: rgba(variables.$white, .5);
      }
    }

  }
}

.switch-input {

  $padding: variables.$xxs;
  $size: 0.9rem;
  background: transparent !important;
  display: inline-flex;
  align-items: center;
  padding: 0;
  border: none !important;

  .input__control {

    position: relative;
    box-sizing: border-box;
    padding: 0;
    width: $size;
    height: $size;

    appearance: none;
    outline: none;

    background-color: transparent;
    border-radius: 50%;

    &:checked{

      &:after {
        -webkit-transform: translateX(22.5px);
        -ms-transform: translateX(22.5px);
        transform: translateX(22.5px);
        -webkit-transition: .4s;
        transition: .4s;
      }

      &:before {
        background-color: helpers.backgroundColor(variables.$info);
        -webkit-transition: .4s;
        transition: .4s;
      }
    }

    &:after {
      width: $size;
      height: $size;
      background-color: variables.$white;
      border-radius: 50%;
      position: absolute;
      content: "";
      -webkit-transition: .4s;
      transition: .4s;
    }

    &:before {
      background: helpers.backgroundColor(variables.$primary);
      position: absolute;
      border-radius: 50rem;
      width: $size * 2.5 + $padding;
      height: $size + $padding;
      top: calc(-1 * $padding/2);
      left: calc(-1 * $padding/2);
      content: "";
      z-index: -1;
      -webkit-transition: .4s;
      transition: .4s;
    }


  }

}